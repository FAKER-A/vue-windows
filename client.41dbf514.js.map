{"version":3,"sources":["webpack:///client.41dbf514.js","webpack:///./example/index.js","webpack:///App.vue","webpack:///./src/index.js","webpack:///./src/style.css","webpack:///./example/App.vue","webpack:///./example/App.vue?fa5f","webpack:///./~/highlight.js/lib/highlight.js","webpack:///./~/highlight.js/lib/languages/javascript.js"],"names":["webpackJsonp","module","exports","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_0_vue___default","n","__WEBPACK_IMPORTED_MODULE_1__App__","__WEBPACK_IMPORTED_MODULE_1__App___default","a","el","render","h","__WEBPACK_IMPORTED_MODULE_0_highlight_js_lib_highlight__","__WEBPACK_IMPORTED_MODULE_0_highlight_js_lib_highlight___default","__WEBPACK_IMPORTED_MODULE_1__src__","registerLanguage","data","width","height","code","highlight","value","components","EditorWindow","BrowserWindow","__WEBPACK_IMPORTED_MODULE_0__style_css__","__WEBPACK_IMPORTED_MODULE_0__style_css___default","d","functional","props","title","required","type","String","browser","Boolean","Number","ctx","children","_ctx$props","className","window","style","class","header","bullets","bullet","body","url","_ctx$props2","attrs","bullet-red","bullet-yellow","bullet-green","__vue_exports__","__vue_options__","__vue_template__","options","staticRenderFns","this","_h","id","staticClass","domProps","innerHTML","_s","_m","min","max","on","input","$event","_n","target","directives","name","expression","href","factory","self","hljs","escape","replace","character","escapeRegexMap","tag","node","nodeName","toLowerCase","testRe","re","lexeme","match","exec","index","isNotHighlighted","language","noHighlightRe","test","blockLanguage","block","i","length","_class","classes","parentNode","languagePrefixRe","getLanguage","split","inherit","parent","obj","key","result","nodeStream","_nodeStream","offset","child","firstChild","nextSibling","nodeType","nodeValue","push","event","mergeStreams","original","highlighted","selectStream","open","attr_str","ArrayProto","map","call","attributes","join","close","processed","nodeStack","stream","substr","reverse","forEach","splice","pop","compileLanguage","reStr","source","langRe","global","RegExp","case_insensitive","compileMode","mode","compiled","keywords","beginKeywords","compiled_keywords","flatten","str","kw","pair","objectKeys","lexemesRe","lexemes","begin","beginRe","end","endsWithParent","endRe","terminator_end","illegal","illegalRe","relevance","contains","expanded_contains","c","variants","v","starts","terminators","concat","filter","ignore_illegals","continuation","subMode","endOfMode","endsParent","isIllegal","keywordMatch","match_str","hasOwnProperty","buildSpan","classname","insideSpan","leaveOpen","noPrefix","classPrefix","openSpan","closeSpan","spanEndTag","processKeywords","keyword_match","last_index","top","mode_buffer","lastIndex","processSubLanguage","explicit","subLanguage","languages","continuations","highlightAuto","undefined","processBuffer","startNewMode","Object","create","processLexeme","buffer","new_mode","skip","excludeBegin","returnBegin","end_mode","origin","returnEnd","excludeEnd","Error","current","count","e","message","indexOf","text","languageSubset","second_best","fixMarkup","tabReplace","useBR","fixMarkupRe","p1","buildClassName","prevClassName","currentLang","resultLang","aliases","trim","highlightBlock","originalStream","resultNode","document","createElementNS","textContent","configure","user_options","initHighlighting","called","blocks","querySelectorAll","initHighlightingOnLoad","addEventListener","lang","alias","listLanguages","keys","&","<",">","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","COMMENT","inherits","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","CSS_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","KEYWORDS","keyword","literal","built_in","NUMBER","SUBST","TEMPLATE_STRING","PARAMS_CONTAINS"],"mappings":"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","file":"client.41dbf514.js","sourcesContent":["webpackJsonp([0,2],[\n/* 0 */,\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__App__);\n\n\n\nnew __WEBPACK_IMPORTED_MODULE_0_vue___default.a({\n  el: '#app',\n  render: function render(h) {\n    return h(__WEBPACK_IMPORTED_MODULE_1__App___default.a);\n  }\n});\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_highlight_js_lib_highlight__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_highlight_js_lib_highlight___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_highlight_js_lib_highlight__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src__ = __webpack_require__(3);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_highlight_js_lib_highlight___default.a.registerLanguage('javascript', __webpack_require__(11));\n\n/* harmony default export */ exports[\"default\"] = {\n  data: function data() {\n    return {\n      width: 500,\n      height: 340,\n      code: __WEBPACK_IMPORTED_MODULE_0_highlight_js_lib_highlight___default.a.highlight('javascript', 'import {EditorWindow} from \\'vue-windows\\'\\n\\nnew Vue({\\n  el: \\'#app\\',\\n  render(h) {\\n    return h(EditorWindow, {props: {title: \\'hola!\\'}})\\n  }\\n})\\n\\n// set how to use in single file component\\n// https://github.com/egoist/vue-windows#usage\\n').value\n    };\n  },\n\n  components: {\n    EditorWindow: __WEBPACK_IMPORTED_MODULE_1__src__[\"a\" /* EditorWindow */],\n    BrowserWindow: __WEBPACK_IMPORTED_MODULE_1__src__[\"b\" /* BrowserWindow */]\n  }\n};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__style_css__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__style_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__style_css__);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return EditorWindow; });\n/* harmony export (binding) */ __webpack_require__.d(exports, \"b\", function() { return BrowserWindow; });\n\n\nvar EditorWindow = {\n  functional: true,\n  props: {\n    title: {\n      required: true,\n      type: String\n    },\n    browser: Boolean,\n    height: Number,\n    width: Number\n  },\n  render: function render(h, ctx) {\n    var children = ctx.children;\n    var _ctx$props = ctx.props;\n    var browser = _ctx$props.browser;\n    var title = _ctx$props.title;\n    var height = _ctx$props.height;\n    var width = _ctx$props.width;\n\n\n    var className = [__WEBPACK_IMPORTED_MODULE_0__style_css___default.a.window, browser && __WEBPACK_IMPORTED_MODULE_0__style_css___default.a.browser];\n\n    var style = {\n      height: Boolean(height) && height + 'px',\n      width: Boolean(width) && width + 'px'\n    };\n\n    return h(\n      'div',\n      { 'class': className, style: style },\n      [h(\n        'div',\n        { 'class': __WEBPACK_IMPORTED_MODULE_0__style_css___default.a.header },\n        [h(\n          'div',\n          { 'class': __WEBPACK_IMPORTED_MODULE_0__style_css___default.a.bullets },\n          [h(\n            'span',\n            { 'class': [__WEBPACK_IMPORTED_MODULE_0__style_css___default.a.bullet, __WEBPACK_IMPORTED_MODULE_0__style_css___default.a['bullet-red']] },\n            []\n          ), h(\n            'span',\n            { 'class': [__WEBPACK_IMPORTED_MODULE_0__style_css___default.a.bullet, __WEBPACK_IMPORTED_MODULE_0__style_css___default.a['bullet-yellow']] },\n            []\n          ), h(\n            'span',\n            { 'class': [__WEBPACK_IMPORTED_MODULE_0__style_css___default.a.bullet, __WEBPACK_IMPORTED_MODULE_0__style_css___default.a['bullet-green']] },\n            []\n          )]\n        ), h(\n          'span',\n          { 'class': __WEBPACK_IMPORTED_MODULE_0__style_css___default.a.title },\n          [title]\n        )]\n      ), h(\n        'div',\n        { 'class': __WEBPACK_IMPORTED_MODULE_0__style_css___default.a.body },\n        [children]\n      )]\n    );\n  }\n};\n\nvar BrowserWindow = {\n  functional: true,\n  props: {\n    url: {\n      required: true,\n      type: String\n    },\n    height: Number,\n    width: Number\n  },\n  render: function render(h, ctx) {\n    var _ctx$props2 = ctx.props;\n    var url = _ctx$props2.url;\n    var height = _ctx$props2.height;\n    var width = _ctx$props2.width;\n\n    var children = ctx.children;\n\n    return h(\n      EditorWindow,\n      {\n        attrs: { title: url, browser: true, height: height, width: width }\n      },\n      [children]\n    );\n  }\n};\n\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n// removed by extract-text-webpack-plugin\nmodule.exports = {\"window\":\"style__window___3EmXK\",\"browser\":\"style__browser___17O2B\",\"header\":\"style__header___3t_1_\",\"title\":\"style__title___vH9OU\",\"body\":\"style__body___2ZVoV\",\"bullets\":\"style__bullets___A6BMt\",\"bullet\":\"style__bullet___1dmsk\",\"bullet-red\":\"style__bullet-red___3eoh6\",\"bullet-yellow\":\"style__bullet-yellow___29N8k\",\"bullet-green\":\"style__bullet-green___3nPdW\"};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 7 */,\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __vue_exports__, __vue_options__\n\n/* styles */\n__webpack_require__(5)\n__webpack_require__(6)\n\n/* script */\n__vue_exports__ = __webpack_require__(2)\n\n/* template */\nvar __vue_template__ = __webpack_require__(9)\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\nmodule.exports={render:function (){with(this) {\n  return _h('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_h('div', {\n    staticClass: \"example\"\n  }, [_h('editor-window', {\n    attrs: {\n      \"title\": \"How To\",\n      \"width\": width,\n      \"height\": height\n    }\n  }, [_h('pre', [_h('code', {\n    domProps: {\n      \"innerHTML\": _s(code)\n    }\n  })])]), \" \", _h('browser-window', {\n    attrs: {\n      \"url\": \"https://github.com/egoist/vue-windows\",\n      \"width\": width,\n      \"height\": height\n    }\n  }, [_m(0)])]), \" \", _h('div', {\n    staticClass: \"control\"\n  }, [_h('div', {\n    staticClass: \"range\"\n  }, [\"\\n      Width: \", _h('input', {\n    attrs: {\n      \"type\": \"range\",\n      \"min\": \"460\",\n      \"max\": \"600\"\n    },\n    domProps: {\n      \"value\": _s(width)\n    },\n    on: {\n      \"input\": function($event) {\n        width = _n($event.target.value)\n      }\n    }\n  }), \" \", _h('span', {\n    directives: [{\n      name: \"show\",\n      value: (width),\n      expression: \"width\"\n    }]\n  }, [_s(width) + \" px\"])]), \" \", _h('div', {\n    staticClass: \"range\"\n  }, [\"\\n      Height: \", _h('input', {\n    attrs: {\n      \"type\": \"range\",\n      \"min\": \"100\",\n      \"max\": \"600\"\n    },\n    domProps: {\n      \"value\": _s(height)\n    },\n    on: {\n      \"input\": function($event) {\n        height = _n($event.target.value)\n      }\n    }\n  }), \" \", _h('span', {\n    directives: [{\n      name: \"show\",\n      value: (height),\n      expression: \"height\"\n    }]\n  }, [_s(height) + \" px\"])])])])\n}},staticRenderFns: [function (){with(this) {\n  return _h('div', {\n    staticClass: \"content\"\n  }, [_h('a', {\n    staticClass: \"star\",\n    attrs: {\n      \"href\": \"https://github.com/egoist/vue-windows\"\n    }\n  }, [\"Start me on GitHub!\"])])\n}}]}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n(function(factory) {\n\n  // Find the global object for export to both the browser and web workers.\n  var globalObject = typeof window === 'object' && window ||\n                     typeof self === 'object' && self;\n\n  // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  if(true) {\n    factory(exports);\n  } else if(globalObject) {\n    // Export hljs globally even when using AMD for cases when this script\n    // is loaded with others that may still expect a global hljs.\n    globalObject.hljs = factory({});\n\n    // Finally register the global hljs with AMD.\n    if(typeof define === 'function' && define.amd) {\n      define([], function() {\n        return globalObject.hljs;\n      });\n    }\n  }\n\n}(function(hljs) {\n  // Convenience variables for build-in objects\n  var ArrayProto = [],\n      objectKeys = Object.keys;\n\n  // Global internal variables used within the highlight.js library.\n  var languages = {},\n      aliases   = {};\n\n  // Regular expressions used throughout the highlight.js library.\n  var noHighlightRe    = /^(no-?highlight|plain|text)$/i,\n      languagePrefixRe = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n      fixMarkupRe      = /((^(<[^>]+>|\\t|)+|(?:\\n)))/gm;\n\n  var spanEndTag = '</span>';\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  var options = {\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n\n  // Object map that is used to escape some common HTML characters.\n  var escapeRegexMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n  };\n\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/[&<>]/gm, function(character) {\n      return escapeRegexMap[character];\n    });\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index === 0;\n  }\n\n  function isNotHighlighted(language) {\n    return noHighlightRe.test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length, _class;\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    match = languagePrefixRe.exec(classes);\n    if (match) {\n      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n\n    for (i = 0, length = classes.length; i < length; i++) {\n      _class = classes[i]\n\n      if (isNotHighlighted(_class) || getLanguage(_class)) {\n        return _class;\n      }\n    }\n  }\n\n  function inherit(parent, obj) {\n    var key;\n    var result = {};\n\n    for (key in parent)\n      result[key] = parent[key];\n    if (obj)\n      for (key in obj)\n        result[key] = obj[key];\n    return result;\n  }\n\n  /* Stream merging */\n\n  function nodeStream(node) {\n    var result = [];\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType === 3)\n          offset += child.nodeValue.length;\n        else if (child.nodeType === 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset);\n          // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n      return offset;\n    })(node, 0);\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n      if (original[0].offset !== highlighted[0].offset) {\n        return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n      }\n\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n\n      if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n\n      ... which is collapsed to:\n      */\n      return highlighted[0].event === 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {return ' ' + a.nodeName + '=\"' + escape(a.value) + '\"';}\n      result += '<' + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event === 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substr(processed, stream[0].offset - processed));\n      processed = stream[0].offset;\n      if (stream === original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream === original && stream.length && stream[0].offset === processed);\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event === 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n    return result + escape(value.substr(processed));\n  }\n\n  /* Initialization */\n\n  function compileLanguage(language) {\n\n    function reStr(re) {\n        return (re && re.source) || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(\n        reStr(value),\n        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n      );\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled)\n        return;\n      mode.compiled = true;\n\n      mode.keywords = mode.keywords || mode.beginKeywords;\n      if (mode.keywords) {\n        var compiled_keywords = {};\n\n        var flatten = function(className, str) {\n          if (language.case_insensitive) {\n            str = str.toLowerCase();\n          }\n          str.split(' ').forEach(function(kw) {\n            var pair = kw.split('|');\n            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n          });\n        };\n\n        if (typeof mode.keywords === 'string') { // string\n          flatten('keyword', mode.keywords);\n        } else {\n          objectKeys(mode.keywords).forEach(function (className) {\n            flatten(className, mode.keywords[className]);\n          });\n        }\n        mode.keywords = compiled_keywords;\n      }\n      mode.lexemesRe = langRe(mode.lexemes || /\\w+/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n        if (!mode.begin)\n          mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (!mode.end && !mode.endsWithParent)\n          mode.end = /\\B|\\b/;\n        if (mode.end)\n          mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end)\n          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n      if (mode.illegal)\n        mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance == null)\n        mode.relevance = 1;\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n      var expanded_contains = [];\n      mode.contains.forEach(function(c) {\n        if (c.variants) {\n          c.variants.forEach(function(v) {expanded_contains.push(inherit(c, v));});\n        } else {\n          expanded_contains.push(c === 'self' ? mode : c);\n        }\n      });\n      mode.contains = expanded_contains;\n      mode.contains.forEach(function(c) {compileMode(c, mode);});\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      var terminators =\n        mode.contains.map(function(c) {\n          return c.beginKeywords ? '\\\\.?(' + c.begin + ')\\\\.?' : c.begin;\n        })\n        .concat([mode.terminator_end, mode.illegal])\n        .map(reStr)\n        .filter(Boolean);\n      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : {exec: function(/*s*/) {return null;}};\n    }\n\n    compileMode(language);\n  }\n\n  /*\n  Core highlighting function. Accepts a language name, or an alias, and a\n  string with the code to highlight. Returns an object with the following\n  properties:\n\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n\n  */\n  function highlight(name, value, ignore_illegals, continuation) {\n\n    function subMode(lexeme, mode) {\n      var i, length;\n\n      for (i = 0, length = mode.contains.length; i < length; i++) {\n        if (testRe(mode.contains[i].beginRe, lexeme)) {\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n        return mode;\n      }\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function isIllegal(lexeme, mode) {\n      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan    = '<span class=\"' + classPrefix,\n          closeSpan   = leaveOpen ? '' : spanEndTag\n\n      openSpan += classname + '\">';\n\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      var keyword_match, last_index, match, result;\n\n      if (!top.keywords)\n        return escape(mode_buffer);\n\n      result = '';\n      last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      match = top.lexemesRe.exec(mode_buffer);\n\n      while (match) {\n        result += escape(mode_buffer.substr(last_index, match.index - last_index));\n        keyword_match = keywordMatch(top, match);\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage === 'string';\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ?\n                   highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) :\n                   highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      result += (top.subLanguage != null ? processSubLanguage() : processKeywords());\n      mode_buffer = '';\n    }\n\n    function startNewMode(mode) {\n      result += mode.className? buildSpan(mode.className, '', true): '';\n      top = Object.create(mode, {parent: {value: top}});\n    }\n\n    function processLexeme(buffer, lexeme) {\n\n      mode_buffer += buffer;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      var new_mode = subMode(lexeme, top);\n      if (new_mode) {\n        if (new_mode.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (new_mode.excludeBegin) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n            mode_buffer = lexeme;\n          }\n        }\n        startNewMode(new_mode, lexeme);\n        return new_mode.returnBegin ? 0 : lexeme.length;\n      }\n\n      var end_mode = endOfMode(top, lexeme);\n      if (end_mode) {\n        var origin = top;\n        if (origin.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (!(origin.returnEnd || origin.excludeEnd)) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (origin.excludeEnd) {\n            mode_buffer = lexeme;\n          }\n        }\n        do {\n          if (top.className) {\n            result += spanEndTag;\n          }\n          if (!top.skip) {\n            relevance += top.relevance;\n          }\n          top = top.parent;\n        } while (top !== end_mode.parent);\n        if (end_mode.starts) {\n          startNewMode(end_mode.starts, '');\n        }\n        return origin.returnEnd ? 0 : lexeme.length;\n      }\n\n      if (isIllegal(lexeme, top))\n        throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n\n      /*\n      Parser should not reach this point as all types of lexemes should be caught\n      earlier, but if it does due to some bug make sure it advances at least one\n      character forward to prevent infinite looping.\n      */\n      mode_buffer += lexeme;\n      return lexeme.length || 1;\n    }\n\n    var language = getLanguage(name);\n    if (!language) {\n      throw new Error('Unknown language: \"' + name + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n    var result = '', current;\n    for(current = top; current !== language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n    var mode_buffer = '';\n    var relevance = 0;\n    try {\n      var match, count, index = 0;\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(value);\n        if (!match)\n          break;\n        count = processLexeme(value.substr(index, match.index - index), match[0]);\n        index = match.index + count;\n      }\n      processLexeme(value.substr(index));\n      for(current = top; current.parent; current = current.parent) { // close dangling modes\n        if (current.className) {\n          result += spanEndTag;\n        }\n      }\n      return {\n        relevance: relevance,\n        value: result,\n        language: name,\n        top: top\n      };\n    } catch (e) {\n      if (e.message && e.message.indexOf('Illegal') !== -1) {\n        return {\n          relevance: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n  */\n  function highlightAuto(text, languageSubset) {\n    languageSubset = languageSubset || options.languages || objectKeys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n    languageSubset.filter(getLanguage).forEach(function(name) {\n      var current = highlight(name, text, false);\n      current.language = name;\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n    return result;\n  }\n\n  /*\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n  */\n  function fixMarkup(value) {\n    return !(options.tabReplace || options.useBR)\n      ? value\n      : value.replace(fixMarkupRe, function(match, p1) {\n          if (options.useBR && match === '\\n') {\n            return '<br>';\n          } else if (options.tabReplace) {\n            return p1.replace(/\\t/g, options.tabReplace);\n          }\n      });\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result   = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n  function highlightBlock(block) {\n    var node, originalStream, result, resultNode, text;\n    var language = blockLanguage(block);\n\n    if (isNotHighlighted(language))\n        return;\n\n    if (options.useBR) {\n      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n    text = node.textContent;\n    result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    originalStream = nodeStream(node);\n    if (originalStream.length) {\n      resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n\n  /*\n  Updates highlight.js global options with values passed in the form of an object.\n  */\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n  function initHighlighting() {\n    if (initHighlighting.called)\n      return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  }\n\n  /*\n  Attaches highlighting to the page load event.\n  */\n  function initHighlightingOnLoad() {\n    addEventListener('DOMContentLoaded', initHighlighting, false);\n    addEventListener('load', initHighlighting, false);\n  }\n\n  function registerLanguage(name, language) {\n    var lang = languages[name] = language(hljs);\n    if (lang.aliases) {\n      lang.aliases.forEach(function(alias) {aliases[alias] = name;});\n    }\n  }\n\n  function listLanguages() {\n    return objectKeys(languages);\n  }\n\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /* Interface definition */\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.inherit = inherit;\n\n  // Common regexps\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n  // Common modes\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b/\n  };\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit(\n      {\n        className: 'comment',\n        begin: begin, end: end,\n        contains: []\n      },\n      inherits || {}\n    );\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',\n      relevance: 0\n    });\n    return mode;\n  };\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' +\n      '%|em|ex|ch|rem'  +\n      '|vw|vh|vmin|vmax' +\n      '|cm|mm|in|pt|pc|px' +\n      '|deg|grad|rad|turn' +\n      '|s|ms' +\n      '|Hz|kHz' +\n      '|dpi|dpcm|dppx' +\n      ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//, end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/, end: /\\]/,\n        relevance: 0,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  hljs.METHOD_GUARD = {\n    // excludes method names from keyword processing\n    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n\n  return hljs;\n}));\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\nmodule.exports = function(hljs) {\n  var IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var KEYWORDS = {\n    keyword:\n      'in of if for while finally var new function do return void else break catch ' +\n      'instanceof with throw case default try this switch continue typeof delete ' +\n      'let yield const export super debugger as async await static ' +\n      // ECMAScript 6 modules import\n      'import from as'\n    ,\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n      'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n      'Promise'\n  };\n  var EXPRESSIONS;\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0[bB][01]+)' },\n      { begin: '\\\\b(0[oO][0-7]+)' },\n      { begin: hljs.C_NUMBER_RE }\n    ],\n    relevance: 0\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '\\\\}',\n    keywords: KEYWORDS,\n    contains: []  // defined later\n  };\n  var TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`', end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  SUBST.contains = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ]\n  var PARAMS_CONTAINS = SUBST.contains.concat([\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.C_LINE_COMMENT_MODE\n  ]);\n\n  return {\n    aliases: ['js', 'jsx'],\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      {\n        className: 'meta',\n        begin: /^#!/, end: /$/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      TEMPLATE_STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBER,\n      { // object attr container\n        begin: /[{,]\\s*/, relevance: 0,\n        contains: [\n          {\n            begin: IDENT_RE + '\\\\s*:', returnBegin: true,\n            relevance: 0,\n            contains: [{className: 'attr', begin: IDENT_RE, relevance: 0}]\n          }\n        ]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: '(\\\\(.*?\\\\)|' + IDENT_RE + ')\\\\s*=>', returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: IDENT_RE\n                  },\n                  {\n                    begin: /\\(\\s*\\)/,\n                  },\n                  {\n                    begin: /\\(/, end: /\\)/,\n                    excludeBegin: true, excludeEnd: true,\n                    keywords: KEYWORDS,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // E4X / JSX\n            begin: /</, end: /(\\/\\w+|\\w+\\/)>/,\n            subLanguage: 'xml',\n            contains: [\n              {begin: /<\\w+\\s*\\/>/, skip: true},\n              {\n                begin: /<\\w+/, end: /(\\/\\w+|\\w+\\/)>/, skip: true,\n                contains: [\n                  {begin: /<\\w+\\s*\\/>/, skip: true},\n                  'self'\n                ]\n              }\n            ]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE}),\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: PARAMS_CONTAINS\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n      hljs.METHOD_GUARD,\n      { // ES6 class\n        className: 'class',\n        beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {beginKeywords: 'extends'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'constructor', end: /\\{/, excludeEnd: true\n      }\n    ],\n    illegal: /#(?!!)/\n  };\n};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ }\n],[12]);\n\n\n// WEBPACK FOOTER //\n// client.41dbf514.js","import Vue from 'vue'\nimport App from './App'\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n\n\n\n// WEBPACK FOOTER //\n// ./example/index.js","<template>\n  <div id=\"app\">\n    <div class=\"example\">\n      <editor-window title=\"How To\" :width=\"width\" :height=\"height\">\n        <pre><code v-html=\"code\"></code></pre>\n      </editor-window>\n      <browser-window url=\"https://github.com/egoist/vue-windows\" :width=\"width\" :height=\"height\">\n        <div class=\"content\">\n          <a class=\"star\" href=\"https://github.com/egoist/vue-windows\">Start me on GitHub!</a>\n        </div>\n      </browser-window>\n    </div>\n    <div class=\"control\">\n      <div class=\"range\">\n        Width: <input type=\"range\" min=\"460\" max=\"600\" v-model.number=\"width\">\n        <span v-show=\"width\">{{ width }} px</span>\n      </div>\n      <div class=\"range\">\n        Height: <input type=\"range\" min=\"100\" max=\"600\" v-model.number=\"height\">\n        <span v-show=\"height\">{{ height}} px</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import hljs from 'highlight.js/lib/highlight'\n  import {EditorWindow, BrowserWindow} from '../src'\n\n  hljs.registerLanguage('javascript', require('highlight.js/lib/languages/javascript'))\n\n  export default {\n    data() {\n      return {\n        width: 500,\n        height: 340,\n        code: hljs.highlight('javascript', `import {EditorWindow} from 'vue-windows'\n\nnew Vue({\n  el: '#app',\n  render(h) {\n    return h(EditorWindow, {props: {title: 'hola!'}})\n  }\n})\n\n// set how to use in single file component\n// https://github.com/egoist/vue-windows#usage\n`).value\n      }\n    },\n    components: {\n      EditorWindow,\n      BrowserWindow\n    }\n  }\n</script>\n\n<style>\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;\n  }\n\n  .control {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 30px 0;\n    flex-direction: column;\n  }\n\n  .example {\n    display: flex;\n    flex-wrap: nowrap;\n    height: 500px;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .content {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n  }\n\n  a.star {\n    color: #4fc08d;\n    text-decoration: none;\n    border: 1px solid #4fc08d;\n    border-radius: 33px;\n    padding: 10px 20px;\n  }\n</style>\n\n<style src=\"highlight.js/styles/github\"></style>\n\n\n\n// WEBPACK FOOTER //\n// App.vue?e58b1ce2","import styles from './style.css'\n\nconst EditorWindow = {\n  functional: true,\n  props: {\n    title: {\n      required: true,\n      type: String\n    },\n    browser: Boolean,\n    height: Number,\n    width: Number\n  },\n  render(h, ctx) {\n    const children = ctx.children\n    const {browser, title, height, width} = ctx.props\n\n    const className = [\n      styles.window,\n      browser && styles.browser\n    ]\n\n    const style = {\n      height: Boolean(height) && `${height}px`,\n      width: Boolean(width) && `${width}px`\n    }\n\n    return (\n      <div class={className} style={style}>\n        <div class={styles.header}>\n          <div class={styles.bullets}>\n            <span class={[styles.bullet, styles['bullet-red']]}></span>\n            <span class={[styles.bullet, styles['bullet-yellow']]}></span>\n            <span class={[styles.bullet, styles['bullet-green']]}></span>\n          </div>\n          <span class={styles.title}>{title}</span>\n        </div>\n        <div class={styles.body}>\n          {children}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst BrowserWindow = {\n  functional: true,\n  props: {\n    url: {\n      required: true,\n      type: String\n    },\n    height: Number,\n    width: Number\n  },\n  render(h, ctx) {\n    const {url, height, width} = ctx.props\n    const children = ctx.children\n\n    return (\n      <EditorWindow title={url} browser={true} height={height} width={width}>\n        {children}\n      </EditorWindow>\n    )\n  }\n}\n\nexport {\n  EditorWindow,\n  BrowserWindow\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"window\":\"style__window___3EmXK\",\"browser\":\"style__browser___17O2B\",\"header\":\"style__header___3t_1_\",\"title\":\"style__title___vH9OU\",\"body\":\"style__body___2ZVoV\",\"bullets\":\"style__bullets___A6BMt\",\"bullet\":\"style__bullet___1dmsk\",\"bullet-red\":\"style__bullet-red___3eoh6\",\"bullet-yellow\":\"style__bullet-yellow___29N8k\",\"bullet-green\":\"style__bullet-green___3nPdW\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/style.css\n// module id = 4\n// module chunks = 0","var __vue_exports__, __vue_options__\n\n/* styles */\nrequire(\"!!./../../vbuild/node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap&-autoprefixer!vue-loader/lib/style-rewriter?id=data-v-1!vue-loader/lib/selector?type=styles&index=0!./App.vue\")\nrequire(\"!!./../../vbuild/node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap&-autoprefixer!vue-loader/lib/style-rewriter?id=data-v-1!highlight.js/styles/github\")\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./App.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-1!vue-loader/lib/selector?type=template&index=0!./App.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./example/App.vue\n// module id = 8\n// module chunks = 0","module.exports={render:function (){with(this) {\n  return _h('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_h('div', {\n    staticClass: \"example\"\n  }, [_h('editor-window', {\n    attrs: {\n      \"title\": \"How To\",\n      \"width\": width,\n      \"height\": height\n    }\n  }, [_h('pre', [_h('code', {\n    domProps: {\n      \"innerHTML\": _s(code)\n    }\n  })])]), \" \", _h('browser-window', {\n    attrs: {\n      \"url\": \"https://github.com/egoist/vue-windows\",\n      \"width\": width,\n      \"height\": height\n    }\n  }, [_m(0)])]), \" \", _h('div', {\n    staticClass: \"control\"\n  }, [_h('div', {\n    staticClass: \"range\"\n  }, [\"\\n      Width: \", _h('input', {\n    attrs: {\n      \"type\": \"range\",\n      \"min\": \"460\",\n      \"max\": \"600\"\n    },\n    domProps: {\n      \"value\": _s(width)\n    },\n    on: {\n      \"input\": function($event) {\n        width = _n($event.target.value)\n      }\n    }\n  }), \" \", _h('span', {\n    directives: [{\n      name: \"show\",\n      value: (width),\n      expression: \"width\"\n    }]\n  }, [_s(width) + \" px\"])]), \" \", _h('div', {\n    staticClass: \"range\"\n  }, [\"\\n      Height: \", _h('input', {\n    attrs: {\n      \"type\": \"range\",\n      \"min\": \"100\",\n      \"max\": \"600\"\n    },\n    domProps: {\n      \"value\": _s(height)\n    },\n    on: {\n      \"input\": function($event) {\n        height = _n($event.target.value)\n      }\n    }\n  }), \" \", _h('span', {\n    directives: [{\n      name: \"show\",\n      value: (height),\n      expression: \"height\"\n    }]\n  }, [_s(height) + \" px\"])])])])\n}},staticRenderFns: [function (){with(this) {\n  return _h('div', {\n    staticClass: \"content\"\n  }, [_h('a', {\n    staticClass: \"star\",\n    attrs: {\n      \"href\": \"https://github.com/egoist/vue-windows\"\n    }\n  }, [\"Start me on GitHub!\"])])\n}}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../vbuild/~/vue-loader/lib/template-compiler.js?id=data-v-1!../vbuild/~/vue-loader/lib/selector.js?type=template&index=0!./example/App.vue\n// module id = 9\n// module chunks = 0","/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n(function(factory) {\n\n  // Find the global object for export to both the browser and web workers.\n  var globalObject = typeof window === 'object' && window ||\n                     typeof self === 'object' && self;\n\n  // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  if(typeof exports !== 'undefined') {\n    factory(exports);\n  } else if(globalObject) {\n    // Export hljs globally even when using AMD for cases when this script\n    // is loaded with others that may still expect a global hljs.\n    globalObject.hljs = factory({});\n\n    // Finally register the global hljs with AMD.\n    if(typeof define === 'function' && define.amd) {\n      define([], function() {\n        return globalObject.hljs;\n      });\n    }\n  }\n\n}(function(hljs) {\n  // Convenience variables for build-in objects\n  var ArrayProto = [],\n      objectKeys = Object.keys;\n\n  // Global internal variables used within the highlight.js library.\n  var languages = {},\n      aliases   = {};\n\n  // Regular expressions used throughout the highlight.js library.\n  var noHighlightRe    = /^(no-?highlight|plain|text)$/i,\n      languagePrefixRe = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n      fixMarkupRe      = /((^(<[^>]+>|\\t|)+|(?:\\n)))/gm;\n\n  var spanEndTag = '</span>';\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  var options = {\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n\n  // Object map that is used to escape some common HTML characters.\n  var escapeRegexMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n  };\n\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/[&<>]/gm, function(character) {\n      return escapeRegexMap[character];\n    });\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index === 0;\n  }\n\n  function isNotHighlighted(language) {\n    return noHighlightRe.test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length, _class;\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    match = languagePrefixRe.exec(classes);\n    if (match) {\n      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n\n    for (i = 0, length = classes.length; i < length; i++) {\n      _class = classes[i]\n\n      if (isNotHighlighted(_class) || getLanguage(_class)) {\n        return _class;\n      }\n    }\n  }\n\n  function inherit(parent, obj) {\n    var key;\n    var result = {};\n\n    for (key in parent)\n      result[key] = parent[key];\n    if (obj)\n      for (key in obj)\n        result[key] = obj[key];\n    return result;\n  }\n\n  /* Stream merging */\n\n  function nodeStream(node) {\n    var result = [];\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType === 3)\n          offset += child.nodeValue.length;\n        else if (child.nodeType === 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset);\n          // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n      return offset;\n    })(node, 0);\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n      if (original[0].offset !== highlighted[0].offset) {\n        return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n      }\n\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n\n      if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n\n      ... which is collapsed to:\n      */\n      return highlighted[0].event === 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {return ' ' + a.nodeName + '=\"' + escape(a.value) + '\"';}\n      result += '<' + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event === 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substr(processed, stream[0].offset - processed));\n      processed = stream[0].offset;\n      if (stream === original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream === original && stream.length && stream[0].offset === processed);\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event === 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n    return result + escape(value.substr(processed));\n  }\n\n  /* Initialization */\n\n  function compileLanguage(language) {\n\n    function reStr(re) {\n        return (re && re.source) || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(\n        reStr(value),\n        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n      );\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled)\n        return;\n      mode.compiled = true;\n\n      mode.keywords = mode.keywords || mode.beginKeywords;\n      if (mode.keywords) {\n        var compiled_keywords = {};\n\n        var flatten = function(className, str) {\n          if (language.case_insensitive) {\n            str = str.toLowerCase();\n          }\n          str.split(' ').forEach(function(kw) {\n            var pair = kw.split('|');\n            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n          });\n        };\n\n        if (typeof mode.keywords === 'string') { // string\n          flatten('keyword', mode.keywords);\n        } else {\n          objectKeys(mode.keywords).forEach(function (className) {\n            flatten(className, mode.keywords[className]);\n          });\n        }\n        mode.keywords = compiled_keywords;\n      }\n      mode.lexemesRe = langRe(mode.lexemes || /\\w+/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n        if (!mode.begin)\n          mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (!mode.end && !mode.endsWithParent)\n          mode.end = /\\B|\\b/;\n        if (mode.end)\n          mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end)\n          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n      if (mode.illegal)\n        mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance == null)\n        mode.relevance = 1;\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n      var expanded_contains = [];\n      mode.contains.forEach(function(c) {\n        if (c.variants) {\n          c.variants.forEach(function(v) {expanded_contains.push(inherit(c, v));});\n        } else {\n          expanded_contains.push(c === 'self' ? mode : c);\n        }\n      });\n      mode.contains = expanded_contains;\n      mode.contains.forEach(function(c) {compileMode(c, mode);});\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      var terminators =\n        mode.contains.map(function(c) {\n          return c.beginKeywords ? '\\\\.?(' + c.begin + ')\\\\.?' : c.begin;\n        })\n        .concat([mode.terminator_end, mode.illegal])\n        .map(reStr)\n        .filter(Boolean);\n      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : {exec: function(/*s*/) {return null;}};\n    }\n\n    compileMode(language);\n  }\n\n  /*\n  Core highlighting function. Accepts a language name, or an alias, and a\n  string with the code to highlight. Returns an object with the following\n  properties:\n\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n\n  */\n  function highlight(name, value, ignore_illegals, continuation) {\n\n    function subMode(lexeme, mode) {\n      var i, length;\n\n      for (i = 0, length = mode.contains.length; i < length; i++) {\n        if (testRe(mode.contains[i].beginRe, lexeme)) {\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n        return mode;\n      }\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function isIllegal(lexeme, mode) {\n      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan    = '<span class=\"' + classPrefix,\n          closeSpan   = leaveOpen ? '' : spanEndTag\n\n      openSpan += classname + '\">';\n\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      var keyword_match, last_index, match, result;\n\n      if (!top.keywords)\n        return escape(mode_buffer);\n\n      result = '';\n      last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      match = top.lexemesRe.exec(mode_buffer);\n\n      while (match) {\n        result += escape(mode_buffer.substr(last_index, match.index - last_index));\n        keyword_match = keywordMatch(top, match);\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage === 'string';\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ?\n                   highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) :\n                   highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      result += (top.subLanguage != null ? processSubLanguage() : processKeywords());\n      mode_buffer = '';\n    }\n\n    function startNewMode(mode) {\n      result += mode.className? buildSpan(mode.className, '', true): '';\n      top = Object.create(mode, {parent: {value: top}});\n    }\n\n    function processLexeme(buffer, lexeme) {\n\n      mode_buffer += buffer;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      var new_mode = subMode(lexeme, top);\n      if (new_mode) {\n        if (new_mode.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (new_mode.excludeBegin) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n            mode_buffer = lexeme;\n          }\n        }\n        startNewMode(new_mode, lexeme);\n        return new_mode.returnBegin ? 0 : lexeme.length;\n      }\n\n      var end_mode = endOfMode(top, lexeme);\n      if (end_mode) {\n        var origin = top;\n        if (origin.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (!(origin.returnEnd || origin.excludeEnd)) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (origin.excludeEnd) {\n            mode_buffer = lexeme;\n          }\n        }\n        do {\n          if (top.className) {\n            result += spanEndTag;\n          }\n          if (!top.skip) {\n            relevance += top.relevance;\n          }\n          top = top.parent;\n        } while (top !== end_mode.parent);\n        if (end_mode.starts) {\n          startNewMode(end_mode.starts, '');\n        }\n        return origin.returnEnd ? 0 : lexeme.length;\n      }\n\n      if (isIllegal(lexeme, top))\n        throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n\n      /*\n      Parser should not reach this point as all types of lexemes should be caught\n      earlier, but if it does due to some bug make sure it advances at least one\n      character forward to prevent infinite looping.\n      */\n      mode_buffer += lexeme;\n      return lexeme.length || 1;\n    }\n\n    var language = getLanguage(name);\n    if (!language) {\n      throw new Error('Unknown language: \"' + name + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n    var result = '', current;\n    for(current = top; current !== language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n    var mode_buffer = '';\n    var relevance = 0;\n    try {\n      var match, count, index = 0;\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(value);\n        if (!match)\n          break;\n        count = processLexeme(value.substr(index, match.index - index), match[0]);\n        index = match.index + count;\n      }\n      processLexeme(value.substr(index));\n      for(current = top; current.parent; current = current.parent) { // close dangling modes\n        if (current.className) {\n          result += spanEndTag;\n        }\n      }\n      return {\n        relevance: relevance,\n        value: result,\n        language: name,\n        top: top\n      };\n    } catch (e) {\n      if (e.message && e.message.indexOf('Illegal') !== -1) {\n        return {\n          relevance: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n  */\n  function highlightAuto(text, languageSubset) {\n    languageSubset = languageSubset || options.languages || objectKeys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n    languageSubset.filter(getLanguage).forEach(function(name) {\n      var current = highlight(name, text, false);\n      current.language = name;\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n    return result;\n  }\n\n  /*\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n  */\n  function fixMarkup(value) {\n    return !(options.tabReplace || options.useBR)\n      ? value\n      : value.replace(fixMarkupRe, function(match, p1) {\n          if (options.useBR && match === '\\n') {\n            return '<br>';\n          } else if (options.tabReplace) {\n            return p1.replace(/\\t/g, options.tabReplace);\n          }\n      });\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result   = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n  function highlightBlock(block) {\n    var node, originalStream, result, resultNode, text;\n    var language = blockLanguage(block);\n\n    if (isNotHighlighted(language))\n        return;\n\n    if (options.useBR) {\n      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n    text = node.textContent;\n    result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    originalStream = nodeStream(node);\n    if (originalStream.length) {\n      resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n\n  /*\n  Updates highlight.js global options with values passed in the form of an object.\n  */\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n  function initHighlighting() {\n    if (initHighlighting.called)\n      return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  }\n\n  /*\n  Attaches highlighting to the page load event.\n  */\n  function initHighlightingOnLoad() {\n    addEventListener('DOMContentLoaded', initHighlighting, false);\n    addEventListener('load', initHighlighting, false);\n  }\n\n  function registerLanguage(name, language) {\n    var lang = languages[name] = language(hljs);\n    if (lang.aliases) {\n      lang.aliases.forEach(function(alias) {aliases[alias] = name;});\n    }\n  }\n\n  function listLanguages() {\n    return objectKeys(languages);\n  }\n\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /* Interface definition */\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.inherit = inherit;\n\n  // Common regexps\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n  // Common modes\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b/\n  };\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit(\n      {\n        className: 'comment',\n        begin: begin, end: end,\n        contains: []\n      },\n      inherits || {}\n    );\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',\n      relevance: 0\n    });\n    return mode;\n  };\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' +\n      '%|em|ex|ch|rem'  +\n      '|vw|vh|vmin|vmax' +\n      '|cm|mm|in|pt|pc|px' +\n      '|deg|grad|rad|turn' +\n      '|s|ms' +\n      '|Hz|kHz' +\n      '|dpi|dpcm|dppx' +\n      ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//, end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/, end: /\\]/,\n        relevance: 0,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  hljs.METHOD_GUARD = {\n    // excludes method names from keyword processing\n    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n\n  return hljs;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/highlight.js/lib/highlight.js\n// module id = 10\n// module chunks = 0","module.exports = function(hljs) {\n  var IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var KEYWORDS = {\n    keyword:\n      'in of if for while finally var new function do return void else break catch ' +\n      'instanceof with throw case default try this switch continue typeof delete ' +\n      'let yield const export super debugger as async await static ' +\n      // ECMAScript 6 modules import\n      'import from as'\n    ,\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n      'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n      'Promise'\n  };\n  var EXPRESSIONS;\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0[bB][01]+)' },\n      { begin: '\\\\b(0[oO][0-7]+)' },\n      { begin: hljs.C_NUMBER_RE }\n    ],\n    relevance: 0\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '\\\\}',\n    keywords: KEYWORDS,\n    contains: []  // defined later\n  };\n  var TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`', end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  SUBST.contains = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ]\n  var PARAMS_CONTAINS = SUBST.contains.concat([\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.C_LINE_COMMENT_MODE\n  ]);\n\n  return {\n    aliases: ['js', 'jsx'],\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      {\n        className: 'meta',\n        begin: /^#!/, end: /$/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      TEMPLATE_STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBER,\n      { // object attr container\n        begin: /[{,]\\s*/, relevance: 0,\n        contains: [\n          {\n            begin: IDENT_RE + '\\\\s*:', returnBegin: true,\n            relevance: 0,\n            contains: [{className: 'attr', begin: IDENT_RE, relevance: 0}]\n          }\n        ]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: '(\\\\(.*?\\\\)|' + IDENT_RE + ')\\\\s*=>', returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: IDENT_RE\n                  },\n                  {\n                    begin: /\\(\\s*\\)/,\n                  },\n                  {\n                    begin: /\\(/, end: /\\)/,\n                    excludeBegin: true, excludeEnd: true,\n                    keywords: KEYWORDS,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // E4X / JSX\n            begin: /</, end: /(\\/\\w+|\\w+\\/)>/,\n            subLanguage: 'xml',\n            contains: [\n              {begin: /<\\w+\\s*\\/>/, skip: true},\n              {\n                begin: /<\\w+/, end: /(\\/\\w+|\\w+\\/)>/, skip: true,\n                contains: [\n                  {begin: /<\\w+\\s*\\/>/, skip: true},\n                  'self'\n                ]\n              }\n            ]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE}),\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: PARAMS_CONTAINS\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n      hljs.METHOD_GUARD,\n      { // ES6 class\n        className: 'class',\n        beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {beginKeywords: 'extends'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'constructor', end: /\\{/, excludeEnd: true\n      }\n    ],\n    illegal: /#(?!!)/\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/highlight.js/lib/languages/javascript.js\n// module id = 11\n// module chunks = 0"],"sourceRoot":""}